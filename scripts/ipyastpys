#!/usr/bin/env python

import sys,IPython
from optparse import OptionParser


op = OptionParser()
op.usage = '%prog [options] [-a/--ipy-args --ipyop1 --ipyop2 -i ...]'
op.add_option('-a','--ipy-args',help='All following arguments are treated as arguments for ipython')

#first strip out the -a/--ipy-args bit and save the args if needed
if '-a' in sys.argv or '--ipy-args' in sys.argv:
    if '-a' in sys.argv:
        ind = sys.argv.index('-a')
    else:
        ind = sys.argv.index('--ipy-args')
        
    ipyargs = sys.argv[(ind+1):]
    ipyargs.insert(0,sys.argv[0])
    del sys.argv[ind:]
    
    #insert necessary ipython arguments if they aren't already there
    if '-p' not in ipyargs and '--profile' not in ipyargs:
        ipyargs.append('-p')
        ipyargs.append('astpys')
        
else:
    ipyargs = [sys.argv[0],'-p','astpys']
    

#parse ipyastpys args
ops,args = op.parse_args()

#replace sys.argv with args appropriate for ipython
sys.argv[:] = ipyargs

#get version info
majver,minver = IPython.__version__.split('.')[:2]
majver,minver = int(majver),int(minver)

if majver>0 or minver>=11:
    #Use entry point mechanism
    from pkg_resources import load_entry_point
    sys.exit(load_entry_point('ipython', 'console_scripts', 'ipython')())
else:
    #add pylab if version < 0.11,
    if '--pylab' not in sys.argv:
        sys.argv.append('--pylab')
    
    #Launch via the .start mechanism
    import IPython.Shell
    IPython.Shell.start().mainloop()
    
    
    